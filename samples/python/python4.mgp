#!/usr/bin/env mgp
# Run this with mgp -U, or you will get empty slides in the middle
# Note: tabs and trailing spaces are *important* in this file
# - Preamble ----------------------------------------------------------------
%deffont "standard" xfont "verdana"
%deffont "thick" xfont "verdana-bold"
%deffont "em" xfont "verdana-medium-i"
%default 1 area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%default 2 center, size 5
%default 3 size 7, vgap 80
%tab 1 prefix "    "
# ---------------------------------------------------------------------------
%page
%pcache 1 1 0 1
%ccolor "#134d73"
%nodefault
%size 7, font "standard", vgap 20, fore "black", back "white"



%center, font "standard", size 7
Programavimo kalba
%center, font "thick", size 11
Python
%size 3

ketvirtoji paskaita

%size 5, font "standard", fore "#134d73"
Marius Gedminas
%size 4
<mgedmin@b4net.lt>
%size 2

%size 5

%size 4
http://mg.b4net.lt/python/
%size 2


%mark


%fore "black",size 2
2006 ruduo
%again
%left,valign "top",newimage "logo.gif"
# ---------------------------------------------------------------------------
%page


Išskirtinės situacijos
# ---------------------------------------------------------------------------
%page


f = file('neratokio')
# ---------------------------------------------------------------------------
%page


z = x / y # y == 0
# ---------------------------------------------------------------------------
%page


obj.eat()
# ---------------------------------------------------------------------------
%page


int('not a number')
# ---------------------------------------------------------------------------
%page


Exception klasė
# ---------------------------------------------------------------------------
%page


Klaidų sukūrimas
# ---------------------------------------------------------------------------
%page


raise Exception('man skauda pilvą')
# ---------------------------------------------------------------------------
%page


Klaidų sugavimas
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


try:
    f = file('nonono')
except IOError:
    print 'ai ai ai'
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


try:
    f = file('nonono')
except IOError, e:
    print 'ai ai ai:', e
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


try:
    f = file('nonono')
except IOError, e:
    print 'ai ai ai:', e
else:
    f.read()
# ---------------------------------------------------------------------------
%page


Resursų atlaisvinimas
(nesvarbu, buvo klaida, ar nebuvo)
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


try:
    ...
finally:
    f.close()
# ---------------------------------------------------------------------------
%page


Klaidos užbaiginėja funkcijas, kol nebus sugautas
# ---------------------------------------------------------------------------
%page


arba užbaigia programą
# ---------------------------------------------------------------------------
%page


Kai kurios standartinės klaidos
# ---------------------------------------------------------------------------
%page
%filter "python l5filter.py"
IOError -- įvedimo/išvedimo klaida (nėra failo, nepavyko sukurti katalogo ir pan.)
OSError -- operacinės sistemos klaida
IndexError -- sąrašo indeksas užeina už ribų
KeyError -- žodyne nėra tokio rakto
TypeError -- netinkamas argumento tipas
ValueError -- netinkama argumento reikšmė
AttributeError -- objektas neturi tokio atributo
NameError -- nėra tokio kintamojo
SyntaxError -- sintaksės klaida Python programoje
ImportError -- nepavyko importuoti modulio
ZeroDivisionError -- dalyba iš nulio
RuntimeError -- programos veikimo klaida (pvz., amžina rekursija)
KeyboardInterrupt -- vartotojas paspaudė Ctrl+C
%endfilter
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


try:
    f = file('nonono')
except (OSError, IOError), e:
    print 'ai ai ai:', e
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


try:
    f = file('nonono')
except (OSError, IOError):
    print 'ai ai ai'
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


try:
    ...
except:    # blogas pavyzys
    f.close()
# ---------------------------------------------------------------------------
%page


Gaudyti reikia tik tas klaidas, kurių priežastis aiški
# ---------------------------------------------------------------------------
%page


Kitaip galima nepastebėti klaidos programoje
# ---------------------------------------------------------------------------
%page


arba netyčia neleisti vartotojui su Ctrl+C nutraukti programos
# ---------------------------------------------------------------------------
%page


Savo sukurtos klaidos
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10


class ManoKlaida(Exception):
    """Negerai tas ir tas"""
# ---------------------------------------------------------------------------
%page


Apie klaidas viskas.
# ---------------------------------------------------------------------------
%page


Programos vykdymo modelis
# ---------------------------------------------------------------------------
%page


Sakiniai vykdomi paeiliui
# ---------------------------------------------------------------------------
%page


import, class, def
tiesiog sakiniai
# ---------------------------------------------------------------------------
%page


Cikliniai importai
kartais veikia, bet dažniausiai yra skausmingi
# ---------------------------------------------------------------------------
%page


Vardų erdvės
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 3

%size 6, vgap 40, center

# production: use dia to print names-and-objects.dia to postscript, then
# use imagemagick's convert -geometry 800x output.ps output.png, then crop
%newimage "names-and-objects.png"
# ---------------------------------------------------------------------------
%page


(prisimenat skirtumą tarp vardų ir objektų?)
# ---------------------------------------------------------------------------
%page


Kiekvienas modulis turi savo
# ---------------------------------------------------------------------------
%page


Funkcijos ir lokalūs kintamieji
# ---------------------------------------------------------------------------
%page


Yra globalių kintamųjų erdvė,
yra lokalių kintamųjų erdvė
# ---------------------------------------------------------------------------
%page


Funkcijos funkcijų viduje
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10
def katalogu_dydziai(saknis):
    pradzia = len(saknis)
    def spausdink(kur):
        kiek = len(os.listdir(kur))
        kur = kur[pradzia:]
        print "%s: %s" % (kur, kiek)
    apeik_katalogu_medi(saknis, spausdink)
# ---------------------------------------------------------------------------
%page


Uždariniai
(closure)
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10
def pagamink_sifra(raktas):
    def sifruok(tekstas):
        ...
    return sifruok
sifras1 = pagamink_sifra(1)
sifras2 = pagamink_sifra(2)
# ---------------------------------------------------------------------------
%page


Globalūs kintamieji funkcijose
# ---------------------------------------------------------------------------
%page


Funkcijos viduje galima pasiekti tiek globalius, tiek lokalius
# ---------------------------------------------------------------------------
%page


Funkcijos viduje galima pakeisti tik lokalius
# ---------------------------------------------------------------------------
%page


Nebent naudoji sakinį global
# ---------------------------------------------------------------------------
%page


Nutylėtieji funkcijų parametrai
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10
def fib(n, cache={}):
    if n <= 2:
        return 1
    if n not in cache:
        cache[n] = fib(n-1, n-2)
    return cache[n]
# ---------------------------------------------------------------------------
%page


Su jais atsargiai!
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10
class Zaidejas(object):
    def __init__(self, maisas=[]):
        self.maisas = [] # klaida!?

jonas = Zaidejas()
petras = Zaidejas()
jonas.maisas is petras.maisas # !
# ---------------------------------------------------------------------------
%page
%nodefault,area 90 90, prefix 0, vgap 260, size 8, font "standard", fore "#134d73", back "white", right, newimage -zoom 75 "vu-logo.png"
%size 1

%left, size 5, vgap 10
class Zaidejas(object):
    def __init__(self, maisas=None):
        if maisas is None:
            maisas = []
        self.maisas = maisas

%center
arba
%left

class Zaidejas(object):
    def __init__(self, maisas=[]):
        self.maisas = list(maisas)
# ---------------------------------------------------------------------------
%page


Apibendrinimas
# ---------------------------------------------------------------------------
%page


Sakiniai vykdomi paeiliui
Moduliai turi savo vardų erdves
Funkcijų vardų erdvės įsideda viena į kitą
